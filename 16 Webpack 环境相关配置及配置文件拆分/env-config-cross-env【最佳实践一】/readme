为什么要拆分配置文件?
在实际开发实践中，为了方便开发调试和上线，项目中我们一般配置两个 Webpack 配置，一个是开发环境一个是生产环境，开发环境帮助我们快速开发测试联调，生产环境保证上线环境的打包流程是最优化体验，这就是配置文件根据环境进行拆分。

怎么拆?
1. 配置文件拆分最重要的收益是我们可以提取不同目标之间的共性，将经常改动的配置跟公共配置分开。
2. 可以识别要组合的较小配置部件，这些配置可以推送到自己的软件包以跨项目使用。另外，配置拆分还可以将配置作为依赖项进行管理，而不是在多个项目中复制类似的配置。

开发环境和生产环境需要注意的区别/注意事项?
生产环境可能需要分离 CSS 成单独的文件，以便多个页面共享同一个 CSS 文件；
生产环境需要压缩 HTML/CSS/JS 代码；
生产环境需要压缩图片；
开发环境需要生成 SourceMap 文件；
开发环境需要打印 debug 信息；
开发环境需要 HMR、devServer 等功能…

按环境划分 Webpack 配置文件!
webpack.config.js：所有环境的默认入口配置文件；
webpack.base.js：基础部分，即多个文件中共享的配置；
webpack.development.js：开发环境使用的配置；
webpack.production.js：生产环境使用的配置。
